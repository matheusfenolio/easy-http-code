"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.HttpMessage = exports.HttpStatus = void 0;
var HttpStatus;
(function (HttpStatus) {
    HttpStatus[HttpStatus["CONTINUE"] = 100] = "CONTINUE";
    HttpStatus[HttpStatus["SWITCHING"] = 101] = "SWITCHING";
    HttpStatus[HttpStatus["PROCESSING"] = 102] = "PROCESSING";
    HttpStatus[HttpStatus["EARLY HINTS"] = 103] = "EARLY HINTS";
    HttpStatus[HttpStatus["OK"] = 200] = "OK";
    HttpStatus[HttpStatus["CREATED"] = 201] = "CREATED";
    HttpStatus[HttpStatus["ACCEPTED"] = 202] = "ACCEPTED";
    HttpStatus[HttpStatus["NON-AUTHORITATIVE INFORMATION"] = 203] = "NON-AUTHORITATIVE INFORMATION";
    HttpStatus[HttpStatus["NO CONTENT"] = 204] = "NO CONTENT";
    HttpStatus[HttpStatus["RESET CONTENT"] = 205] = "RESET CONTENT";
    HttpStatus[HttpStatus["PARTIAL CONTENT"] = 206] = "PARTIAL CONTENT";
    HttpStatus[HttpStatus["MULTI-STATUS"] = 207] = "MULTI-STATUS";
    HttpStatus[HttpStatus["ALREADY REPORTED"] = 208] = "ALREADY REPORTED";
    HttpStatus[HttpStatus["IM USED"] = 226] = "IM USED";
    HttpStatus[HttpStatus["MULTIPLE CHOICES"] = 300] = "MULTIPLE CHOICES";
    HttpStatus[HttpStatus["MOVED PERMANENTLY"] = 301] = "MOVED PERMANENTLY";
    HttpStatus[HttpStatus["FOUND"] = 302] = "FOUND";
    HttpStatus[HttpStatus["SEE OTHER"] = 303] = "SEE OTHER";
    HttpStatus[HttpStatus["NOT MODIFIED"] = 304] = "NOT MODIFIED";
    HttpStatus[HttpStatus["USE PROXY"] = 305] = "USE PROXY";
    HttpStatus[HttpStatus["TEMPORARY REDIRECT"] = 307] = "TEMPORARY REDIRECT";
    HttpStatus[HttpStatus["PERMANENT REDIRECT"] = 308] = "PERMANENT REDIRECT";
    HttpStatus[HttpStatus["BAD REQUEST"] = 400] = "BAD REQUEST";
    HttpStatus[HttpStatus["UNAUTHORIZED"] = 401] = "UNAUTHORIZED";
    HttpStatus[HttpStatus["PAYMENT REQUIRED"] = 402] = "PAYMENT REQUIRED";
    HttpStatus[HttpStatus["FORBIDDEN"] = 403] = "FORBIDDEN";
    HttpStatus[HttpStatus["NOT FOUND"] = 404] = "NOT FOUND";
    HttpStatus[HttpStatus["METHOD NOT ALLOWED"] = 405] = "METHOD NOT ALLOWED";
    HttpStatus[HttpStatus["NOT ACCEPTABLE"] = 406] = "NOT ACCEPTABLE";
    HttpStatus[HttpStatus["PROXY AUTHENTICATION REQUIRED"] = 407] = "PROXY AUTHENTICATION REQUIRED";
    HttpStatus[HttpStatus["REQUEST TIMEOUT"] = 408] = "REQUEST TIMEOUT";
    HttpStatus[HttpStatus["CONFLICT"] = 409] = "CONFLICT";
    HttpStatus[HttpStatus["GONE"] = 410] = "GONE";
    HttpStatus[HttpStatus["LENGTH REQUIRED"] = 411] = "LENGTH REQUIRED";
    HttpStatus[HttpStatus["PRECONDITION FAILED"] = 412] = "PRECONDITION FAILED";
    HttpStatus[HttpStatus["PAYLOAD TOO LARGE"] = 413] = "PAYLOAD TOO LARGE";
    HttpStatus[HttpStatus["URI TOO LONG"] = 414] = "URI TOO LONG";
    HttpStatus[HttpStatus["UNSUPPORTED MEDIA TYPE"] = 415] = "UNSUPPORTED MEDIA TYPE";
    HttpStatus[HttpStatus["RANGE NOT SATISFIABLE"] = 416] = "RANGE NOT SATISFIABLE";
    HttpStatus[HttpStatus["EXPECTATION FAILED"] = 417] = "EXPECTATION FAILED";
    HttpStatus[HttpStatus["MISDIRECTED REQUEST"] = 421] = "MISDIRECTED REQUEST";
    HttpStatus[HttpStatus["UNPROCESSABLE ENTITY"] = 422] = "UNPROCESSABLE ENTITY";
    HttpStatus[HttpStatus["LOCKED"] = 423] = "LOCKED";
    HttpStatus[HttpStatus["FAILED DEPENDENCY"] = 424] = "FAILED DEPENDENCY";
    HttpStatus[HttpStatus["TOO EARLY"] = 425] = "TOO EARLY";
    HttpStatus[HttpStatus["UPGRADE REQUIRED"] = 426] = "UPGRADE REQUIRED";
    HttpStatus[HttpStatus["PRECONDITION REQUIRED"] = 428] = "PRECONDITION REQUIRED";
    HttpStatus[HttpStatus["TOO MANY REQUESTS"] = 429] = "TOO MANY REQUESTS";
    HttpStatus[HttpStatus["REQUEST HEADER FIELDS TOO LARGE"] = 431] = "REQUEST HEADER FIELDS TOO LARGE";
    HttpStatus[HttpStatus["UNAVAILABLE FOR LEGAL REASONS"] = 451] = "UNAVAILABLE FOR LEGAL REASONS";
    HttpStatus[HttpStatus["INTERNAL SERVER ERROR"] = 500] = "INTERNAL SERVER ERROR";
    HttpStatus[HttpStatus["NOT IMPLEMENTED"] = 501] = "NOT IMPLEMENTED";
    HttpStatus[HttpStatus["BAD GATEWAY"] = 502] = "BAD GATEWAY";
    HttpStatus[HttpStatus["SERVICE UNAVAILABLE"] = 503] = "SERVICE UNAVAILABLE";
    HttpStatus[HttpStatus["GATEWAY TIMEOUT"] = 504] = "GATEWAY TIMEOUT";
    HttpStatus[HttpStatus["HTTP VERSION NOT SUPPORTED"] = 505] = "HTTP VERSION NOT SUPPORTED";
    HttpStatus[HttpStatus["VARIANT ALSO NEGOTIATES"] = 506] = "VARIANT ALSO NEGOTIATES";
    HttpStatus[HttpStatus["INSUFFICIENT STORAGE"] = 507] = "INSUFFICIENT STORAGE";
    HttpStatus[HttpStatus["LOOP DETECTED"] = 508] = "LOOP DETECTED";
    HttpStatus[HttpStatus["NOT EXTENDED"] = 510] = "NOT EXTENDED";
    HttpStatus[HttpStatus["NETWORK AUTHENTICATION REQUIRED"] = 511] = "NETWORK AUTHENTICATION REQUIRED";
})(HttpStatus = exports.HttpStatus || (exports.HttpStatus = {}));
var HttpMessage = function (code) {
    switch (code) {
        case 100: return 'CONTINUE';
        case 101: return 'SWITCHING';
        case 102: return 'PROCESSING';
        case 103: return 'EARLY HINTS';
        case 200: return 'OK';
        case 201: return 'CREATED';
        case 202: return 'ACCEPTED';
        case 203: return 'NON-AUTHORITATIVE INFORMATION';
        case 204: return 'NO CONTENT';
        case 205: return 'RESET CONTENT';
        case 206: return 'PARTIAL CONTENT';
        case 207: return 'MULTI-STATUS';
        case 208: return 'ALREADY REPORTED';
        case 226: return 'IM USED';
        case 300: return 'MULTIPLE CHOICES';
        case 301: return 'MOVED PERMANENTLY';
        case 302: return 'FOUND';
        case 303: return 'SEE OTHER';
        case 304: return 'NOT MODIFIED';
        case 305: return 'USE PROXY';
        case 307: return 'TEMPORARY REDIRECT';
        case 308: return 'PERMANENT REDIRECT';
        case 400: return 'BAD REQUEST';
        case 401: return 'UNAUTHORIZED';
        case 402: return 'PAYMENT REQUIRED';
        case 403: return 'FORBIDDEN';
        case 404: return 'NOT FOUND';
        case 405: return 'METHOD NOT ALLOWED';
        case 406: return 'NOT ACCEPTABLE';
        case 407: return 'PROXY AUTHENTICATION REQUIRED';
        case 408: return 'REQUEST TIMEOUT';
        case 409: return 'CONFLICT';
        case 410: return 'GONE';
        case 411: return 'LENGTH REQUIRED';
        case 412: return 'PRECONDITION FAILED';
        case 413: return 'PAYLOAD TOO LARGE';
        case 414: return 'URI TOO LONG';
        case 415: return 'UNSUPPORTED MEDIA TYPE';
        case 416: return 'RANGE NOT SATISFIABLE';
        case 417: return 'EXPECTATION FAILED';
        case 421: return 'MISDIRECTED REQUEST';
        case 422: return 'UNPROCESSABLE ENTITY';
        case 423: return 'LOCKED';
        case 424: return 'FAILED DEPENDENCY';
        case 425: return 'TOO EARLY';
        case 426: return 'UPGRADE REQUIRED';
        case 428: return 'PRECONDITION REQUIRED';
        case 429: return 'TOO MANY REQUESTS';
        case 431: return 'REQUEST HEADER FIELDS TOO LARGE';
        case 451: return 'UNAVAILABLE FOR LEGAL REASONS';
        case 500: return 'INTERNAL SERVER ERROR';
        case 501: return 'NOT IMPLEMENTED';
        case 502: return 'BAD GATEWAY';
        case 503: return 'SERVICE UNAVAILABLE';
        case 504: return 'GATEWAY TIMEOUT';
        case 505: return 'HTTP VERSION NOT SUPPORTED';
        case 506: return 'VARIANT ALSO NEGOTIATES';
        case 507: return 'INSUFFICIENT STORAGE';
        case 508: return 'LOOP DETECTED';
        case 510: return 'NOT EXTENDED';
        case 511: return 'NETWORK AUTHENTICATION REQUIRED';
        default: return 'UNSIGNED';
    }
};
exports.HttpMessage = HttpMessage;
//# sourceMappingURL=index.js.map